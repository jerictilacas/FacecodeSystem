// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace FaceCode
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// This shows the gender of the offender
        /// </summary>
        public void Gender()
        {
            #region Variable Declarations
            WinComboBox uIAddMinorsInformationComboBox = this.UIItemWindow.UIGenderWindow.UIAddMinorsInformationComboBox;
            #endregion

            // Last mouse action was not recorded.

            // Select 'Male' in 'Add Minor's Information' combo box
            uIAddMinorsInformationComboBox.SelectedItem = this.GenderParams.UIAddMinorsInformationComboBoxSelectedItem;
        }
        
        /// <summary>
        /// logout
        /// </summary>
        public void logout()
        {
            #region Variable Declarations
            WinClient uILimageClient = this.UIBunifuFlatButton2Window.UILimageWindow.UILimageClient;
            WinButton uIYesButton = this.UIExitingFaceCodeWindow.UIYesWindow.UIYesButton;
            #endregion

            // Click 'limage' client
            Mouse.Click(uILimageClient, new Point(13, 6));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(41, 9));
        }
        
        /// <summary>
        /// Print
        /// </summary>
        public void PrintRecord()
        {
            #region Variable Declarations
            WinText uIPrintText = this.UIBtnPrintWindow.UIPrintWindow.UIPrintText;
            WinWindow uIPrintpreviewWindow = this.UIPrintpreviewWindow;
            WinButton uICloseButton = this.UIPrintpreviewWindow.UIPrintpreviewTitleBar.UICloseButton;
            #endregion

            // Click 'Print' label
            Mouse.Click(uIPrintText, new Point(29, 28));

            // Maximize window 'Print preview'
            uIPrintpreviewWindow.Maximized = this.PrintRecordParams.UIPrintpreviewWindowMaximized;

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(40, 13));
        }
        
        /// <summary>
        /// dateofbirth
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinDateTimePicker uIDOBDateTimePicker = this.UIDOBWindow.UIDOBDateTimePicker;
            #endregion

            // Last mouse action was not recorded.

            // Select '08/12/1998' in 'DOB' date time picker
            uIDOBDateTimePicker.DateTimeAsString = this.RecordedMethod1Params.UIDOBDateTimePickerDateTimeAsString;
        }
        
        /// <summary>
        /// search
        /// </summary>
        public void search()
        {
            #region Variable Declarations
            WinEdit uITextBox1Edit = this.UIItemWindow.UITextBox1Window.UITextBox1Edit;
            WinText uISearchText = this.UISearchBtnWindow.UISearchWindow.UISearchText;
            #endregion

            // Type 'jerico' in 'textBox1' text box
            uITextBox1Edit.Text = this.searchParams.UITextBox1EditText;

            // Click 'Search' label
            Mouse.Click(uISearchText, new Point(31, 35));
        }
        
        /// <summary>
        /// logout
        /// </summary>
        public void logout2()
        {
            #region Variable Declarations
            WinClient uILimageClient = this.UIBunifuFlatButton2Window.UILimageWindow.UILimageClient;
            WinButton uIYesButton = this.UIExitingFaceCodeWindow.UIYesWindow.UIYesButton;
            #endregion

            // Click 'limage' client
            Mouse.Click(uILimageClient, new Point(15, 7));

            // Click '&Yes' button
            Mouse.Click(uIYesButton, new Point(23, 15));
        }
        
        #region Properties
        public virtual GenderParams GenderParams
        {
            get
            {
                if ((this.mGenderParams == null))
                {
                    this.mGenderParams = new GenderParams();
                }
                return this.mGenderParams;
            }
        }
        
        public virtual PrintRecordParams PrintRecordParams
        {
            get
            {
                if ((this.mPrintRecordParams == null))
                {
                    this.mPrintRecordParams = new PrintRecordParams();
                }
                return this.mPrintRecordParams;
            }
        }
        
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual searchParams searchParams
        {
            get
            {
                if ((this.msearchParams == null))
                {
                    this.msearchParams = new searchParams();
                }
                return this.msearchParams;
            }
        }
        
        public UIDOBWindow UIDOBWindow
        {
            get
            {
                if ((this.mUIDOBWindow == null))
                {
                    this.mUIDOBWindow = new UIDOBWindow();
                }
                return this.mUIDOBWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIPrintpreviewWindow UIPrintpreviewWindow
        {
            get
            {
                if ((this.mUIPrintpreviewWindow == null))
                {
                    this.mUIPrintpreviewWindow = new UIPrintpreviewWindow();
                }
                return this.mUIPrintpreviewWindow;
            }
        }
        
        public UISearchBtnWindow UISearchBtnWindow
        {
            get
            {
                if ((this.mUISearchBtnWindow == null))
                {
                    this.mUISearchBtnWindow = new UISearchBtnWindow();
                }
                return this.mUISearchBtnWindow;
            }
        }
        
        public UIBtnPrintWindow UIBtnPrintWindow
        {
            get
            {
                if ((this.mUIBtnPrintWindow == null))
                {
                    this.mUIBtnPrintWindow = new UIBtnPrintWindow();
                }
                return this.mUIBtnPrintWindow;
            }
        }
        
        public UIBunifuFlatButton2Window UIBunifuFlatButton2Window
        {
            get
            {
                if ((this.mUIBunifuFlatButton2Window == null))
                {
                    this.mUIBunifuFlatButton2Window = new UIBunifuFlatButton2Window();
                }
                return this.mUIBunifuFlatButton2Window;
            }
        }
        
        public UIExitingFaceCodeWindow UIExitingFaceCodeWindow
        {
            get
            {
                if ((this.mUIExitingFaceCodeWindow == null))
                {
                    this.mUIExitingFaceCodeWindow = new UIExitingFaceCodeWindow();
                }
                return this.mUIExitingFaceCodeWindow;
            }
        }
        #endregion
        
        #region Fields
        private GenderParams mGenderParams;
        
        private PrintRecordParams mPrintRecordParams;
        
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private searchParams msearchParams;
        
        private UIDOBWindow mUIDOBWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIPrintpreviewWindow mUIPrintpreviewWindow;
        
        private UISearchBtnWindow mUISearchBtnWindow;
        
        private UIBtnPrintWindow mUIBtnPrintWindow;
        
        private UIBunifuFlatButton2Window mUIBunifuFlatButton2Window;
        
        private UIExitingFaceCodeWindow mUIExitingFaceCodeWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Gender'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class GenderParams
    {
        
        #region Fields
        /// <summary>
        /// Select 'Male' in 'Add Minor's Information' combo box
        /// </summary>
        public string UIAddMinorsInformationComboBoxSelectedItem = "Male";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'PrintRecord'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class PrintRecordParams
    {
        
        #region Fields
        /// <summary>
        /// Maximize window 'Print preview'
        /// </summary>
        public bool UIPrintpreviewWindowMaximized = true;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Select '08/12/1998' in 'DOB' date time picker
        /// </summary>
        public string UIDOBDateTimePickerDateTimeAsString = "08-Dec-1998";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'search'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class searchParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'jerico' in 'textBox1' text box
        /// </summary>
        public string UITextBox1EditText = "jerico";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDOBWindow : WinWindow
    {
        
        public UIDOBWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "22/05/2019";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.SysDateTimePick32", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public WinDateTimePicker UIDOBDateTimePicker
        {
            get
            {
                if ((this.mUIDOBDateTimePicker == null))
                {
                    this.mUIDOBDateTimePicker = new WinDateTimePicker(this);
                }
                return this.mUIDOBDateTimePicker;
            }
        }
        #endregion
        
        #region Fields
        private WinDateTimePicker mUIDOBDateTimePicker;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop 1";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIGenderWindow UIGenderWindow
        {
            get
            {
                if ((this.mUIGenderWindow == null))
                {
                    this.mUIGenderWindow = new UIGenderWindow(this);
                }
                return this.mUIGenderWindow;
            }
        }
        
        public UITextBox1Window UITextBox1Window
        {
            get
            {
                if ((this.mUITextBox1Window == null))
                {
                    this.mUITextBox1Window = new UITextBox1Window(this);
                }
                return this.mUITextBox1Window;
            }
        }
        #endregion
        
        #region Fields
        private UIGenderWindow mUIGenderWindow;
        
        private UITextBox1Window mUITextBox1Window;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIGenderWindow : WinWindow
    {
        
        public UIGenderWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "gender";
            #endregion
        }
        
        #region Properties
        public WinComboBox UIAddMinorsInformationComboBox
        {
            get
            {
                if ((this.mUIAddMinorsInformationComboBox == null))
                {
                    this.mUIAddMinorsInformationComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIAddMinorsInformationComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Add Minor\'s Information";
                    #endregion
                }
                return this.mUIAddMinorsInformationComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIAddMinorsInformationComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITextBox1Window : WinWindow
    {
        
        public UITextBox1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "textBox1";
            #endregion
        }
        
        #region Properties
        public WinEdit UITextBox1Edit
        {
            get
            {
                if ((this.mUITextBox1Edit == null))
                {
                    this.mUITextBox1Edit = new WinEdit(this);
                }
                return this.mUITextBox1Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITextBox1Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPrintpreviewWindow : WinWindow
    {
        
        public UIPrintpreviewWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Print preview";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Print preview");
            #endregion
        }
        
        #region Properties
        public UIPrintpreviewTitleBar UIPrintpreviewTitleBar
        {
            get
            {
                if ((this.mUIPrintpreviewTitleBar == null))
                {
                    this.mUIPrintpreviewTitleBar = new UIPrintpreviewTitleBar(this);
                }
                return this.mUIPrintpreviewTitleBar;
            }
        }
        #endregion
        
        #region Fields
        private UIPrintpreviewTitleBar mUIPrintpreviewTitleBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPrintpreviewTitleBar : WinTitleBar
    {
        
        public UIPrintpreviewTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Print preview");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Print preview");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchBtnWindow : WinWindow
    {
        
        public UISearchBtnWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Search";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UISearchWindow UISearchWindow
        {
            get
            {
                if ((this.mUISearchWindow == null))
                {
                    this.mUISearchWindow = new UISearchWindow(this);
                }
                return this.mUISearchWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISearchWindow mUISearchWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISearchWindow : WinWindow
    {
        
        public UISearchWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txttext";
            #endregion
        }
        
        #region Properties
        public WinText UISearchText
        {
            get
            {
                if ((this.mUISearchText == null))
                {
                    this.mUISearchText = new WinText(this);
                    #region Search Criteria
                    this.mUISearchText.SearchProperties[WinText.PropertyNames.Name] = "Search";
                    #endregion
                }
                return this.mUISearchText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUISearchText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBtnPrintWindow : WinWindow
    {
        
        public UIBtnPrintWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "   Print";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIPrintWindow UIPrintWindow
        {
            get
            {
                if ((this.mUIPrintWindow == null))
                {
                    this.mUIPrintWindow = new UIPrintWindow(this);
                }
                return this.mUIPrintWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPrintWindow mUIPrintWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPrintWindow : WinWindow
    {
        
        public UIPrintWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txttext";
            #endregion
        }
        
        #region Properties
        public WinText UIPrintText
        {
            get
            {
                if ((this.mUIPrintText == null))
                {
                    this.mUIPrintText = new WinText(this);
                    #region Search Criteria
                    this.mUIPrintText.SearchProperties[WinText.PropertyNames.Name] = "   Print";
                    #endregion
                }
                return this.mUIPrintText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIPrintText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBunifuFlatButton2Window : WinWindow
    {
        
        public UIBunifuFlatButton2Window()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "  Logout";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UILimageWindow UILimageWindow
        {
            get
            {
                if ((this.mUILimageWindow == null))
                {
                    this.mUILimageWindow = new UILimageWindow(this);
                }
                return this.mUILimageWindow;
            }
        }
        #endregion
        
        #region Fields
        private UILimageWindow mUILimageWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILimageWindow : WinWindow
    {
        
        public UILimageWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "limage";
            #endregion
        }
        
        #region Properties
        public WinClient UILimageClient
        {
            get
            {
                if ((this.mUILimageClient == null))
                {
                    this.mUILimageClient = new WinClient(this);
                }
                return this.mUILimageClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUILimageClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIExitingFaceCodeWindow : WinWindow
    {
        
        public UIExitingFaceCodeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Exiting FaceCode";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Exiting FaceCode");
            #endregion
        }
        
        #region Properties
        public UIYesWindow UIYesWindow
        {
            get
            {
                if ((this.mUIYesWindow == null))
                {
                    this.mUIYesWindow = new UIYesWindow(this);
                }
                return this.mUIYesWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIYesWindow mUIYesWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIYesWindow : WinWindow
    {
        
        public UIYesWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "6";
            this.WindowTitles.Add("Exiting FaceCode");
            #endregion
        }
        
        #region Properties
        public WinButton UIYesButton
        {
            get
            {
                if ((this.mUIYesButton == null))
                {
                    this.mUIYesButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIYesButton.SearchProperties[WinButton.PropertyNames.Name] = "Yes";
                    this.mUIYesButton.WindowTitles.Add("Exiting FaceCode");
                    #endregion
                }
                return this.mUIYesButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIYesButton;
        #endregion
    }
}
